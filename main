#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
using namespace std;

class Fecha {
private:
	int dia;
	int mes;
	int anio;

public:

	Fecha() : dia(1),mes(1), anio(2000) {}
	Fecha(int _dia, int _mes, int _anio) {
		dia = _dia;
		mes = _mes;
		anio = _anio;
	}

	void setDia(int d) { dia = d; }
	void setMes(int m) { mes = m; }
	void setAnio(int a) { anio = a; }

	int getDia() { return dia; }
	int getMes() { return mes; }
	int getAnio() { return anio;}

	void cargarFecha() {
		cout << "DIA: ";
		cin >> dia;
		cout << "MES: ";
		cin >> mes;
		cout << "ANIO: ";
		cin >> anio;
	}

	void mostrarFecha() {
		cout << dia << "/" << mes << "/" << anio << endl;
	}

	bool validarFecha() {
		int diasPorMes[12] = { 31,28,31,30,31,30,31, 31, 30, 31, 30, 31 };

		if (mes > 12 || mes < 1) {
			return false;
		}

		if ((anio % 4 == 0) && (anio % 100 != 0 || anio % 400 == 0)) {
			if (mes == 2) {
				diasPorMes[1]++;
			}
		}

		int diasDelMes = diasPorMes[mes - 1]; // para saber cuantos dias tiene el mes que recibe


		if (dia<1 || dia>diasDelMes) {
			return false;
		}

		return true;
	}

	int diasTranscurridos() {
		int diasPorMes[12] = { 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 };

		int diasTotales = 0;

		if ((anio % 4 == 0) && (anio % 100 != 0 || anio % 400 == 0)) {
			diasPorMes[1]++;
		}

		for (int i = 0; i < mes - 1; i++) {
			diasTotales += diasPorMes[i];
		}

		diasTotales += dia;

		return diasTotales;
	}

};

class Libro {
private:
	char titulo[70];
	char autor[35];
	int isbn;
	bool disponible;
	int cantidadDisponible;
public:

	Libro(){
		strcpy(titulo, "vacio");
		strcpy(autor, "NN");
		isbn = 0;
		disponible = true;
		cantidadDisponible = 0;
	}
	Libro(const char* t, const char* a, int _isbn, int _cant) {
		strcpy(titulo, t);
		strcpy(autor, a);
		isbn = _isbn;
		disponible = true;
		cantidadDisponible = _cant;

	}

	const char* getTitulo() { return titulo; }
	const char* getAutor() { return autor; }
	int getISBN() { return isbn; }
	int getCantidad() { return cantidadDisponible; }

	void setTitulo(const char* nuevoTitulo) {
		strcpy(titulo, nuevoTitulo);
	}
	void setAutor(const char* nuevoAutor) {
		strcpy(autor, nuevoAutor);
	}
	void setISBN(int nuevoISBN) {
		isbn = nuevoISBN;
	}

	void setCantidad(int nuevaCant) {
		cantidadDisponible = nuevaCant;
	}

	void cargarLibro() {
		cout << "--- CARGANDO LIBRO ---" << endl;
		cout << "TITULO: ";
		cin.getline(titulo, 70);
		cout << "NOMBRE DEL AUTOR: ";
		cin.getline(autor, 35);
		cout << "CODIGO ISBN: ";
		cin >> isbn;
		cout << "DISPONIBLE (1. SI --- 0. NO): ";
		cin >> disponible;
	}
	void mostrarLibro() {
		cout << "--- MOSTRANDO INFORMACION DEL LIBRO ---" << endl;
		cout << "TITULO: " << titulo << endl;
		cout << "AUTOR: " << autor << endl;
		cout << "ISBN: " << isbn << endl;
		cout << "DISPONIBILIDAD: " << disponible <<" | CANTIDAD: " << cantidadDisponible << endl;
	}
	bool prestar() {
		if (!disponible) return false; //ya esta prestado
		disponible = false; //cambio el estado
		return true; //exito
	}
	bool devolver() {
		disponible = true;
		return disponible;
	}

};


class Persona {
private:
	char nombre[30];
	char apellido[30];
	char telefono[20];
	int dni;
	Fecha fechaNacimiento;
public:
	Persona() {
		strcpy(nombre, "NN");
		strcpy(apellido, "NN");
		strcpy(telefono, "000");
		dni = 0;
	}
	Persona(const char* n, const char* a, const char* t, int _dni, Fecha f) {
		strcpy(nombre, n);
		strcpy(apellido, a);
		strcpy(telefono, t);
		dni = _dni;
		fechaNacimiento = f;
	}

	const char* getNombre() { return nombre; }
	const char* getApellido() { return apellido; }
	const char* getTelefono() { return telefono; }
	int getDNI() { return dni; }
	
	void setNombre(const char* nuevoNombre) {
		strcpy(nombre, nuevoNombre);
	}
	void setApellido(const char* nuevoApellido) {
		strcpy(apellido, nuevoApellido);
	}
	void setTelefono(const char* nuevoTelefono) {
		strcpy(telefono, nuevoTelefono);
	}
	void setDNI(int nuevoDni) {
		dni = nuevoDni;
	}

	void cargarPersona() {
		cout << "--- CARGANDO CLIENTE ---" << endl;
		cin.ignore();
		cout << "NOMBRE: ";
		cin.getline(nombre, 30);
		cout << "APELLIDO: ";
		cin.getline(apellido, 30);
		cout << "TELEFONO: ";
		cin.getline(telefono, 20);
		cout << "DNI: ";
		cin >> dni;
		cout << "FECHA DE NACIMIENTO: " << endl;
		fechaNacimiento.cargarFecha();
	}
	void mostrarPersona() {
		cout << "--- MOSTRANDO INFORMACION DEL CLIENTE ---" << endl;
		cout << "NOMBRE: " << nombre << endl;
		cout << "APELLIDO: " << apellido << endl;
		cout << "TELEFONO: " << telefono << endl;
		cout << "DNI: " << dni << endl;
		cout << "FECHA DE NACIMIENTO: ";
		fechaNacimiento.mostrarFecha();
		cout << endl;
	}

};


class Prestamo {

private:
	Libro* libroPrestado;
	Persona* personaQuePidio;
	Fecha fechaPrestamo;
public:
	Prestamo(Libro* libro, Persona* persona, int dia, int mes, int anio) {
		libroPrestado = libro;
		personaQuePidio = persona;
		fechaPrestamo.setDia(dia);
		fechaPrestamo.setMes(mes);
		fechaPrestamo.setAnio(anio);
		libroPrestado->prestar();//se usa -> para acceder a metodos a traves de punteros
	}

	void mostrarPrestamo() {
		cout << "--- INFORMACION DEL PRESTAMO ---"<<endl;
		cout << "LIBRO PRESTADO: ";
		libroPrestado->mostrarLibro();
		cout << "PERSONA QUE PIDIO EL PRESTAMO: ";
		personaQuePidio->mostrarPersona();
		cout << "FECHA DE PRESTAMO: ";
		fechaPrestamo.mostrarFecha();
	}

};

int main() {

	Libro libro1;
	Libro libro2;
	Persona persona1;
	Persona persona2;


	libro1.cargarLibro();
	persona1.cargarPersona();
	Prestamo prestamo1(&libro1, &persona1, 20, 10, 2025); //guarda punteros que apuntan a los objetos libro1 y persona1

	prestamo1.mostrarPrestamo();
	

	return 0;
}
